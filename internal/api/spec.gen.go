// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
