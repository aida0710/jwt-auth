// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
